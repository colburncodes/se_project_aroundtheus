!function(){"use strict";function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var r=class{constructor(e,r){t(this,"_showInputError",(e=>{const t=document.querySelector(`.${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass),e.classList.add(this._settings.inputErrorClass)})),t(this,"_hideInputError",(e=>{const t=document.querySelector(`.${e.id}-error`);t.textContent="",e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass)})),t(this,"_checkInputValidity",((e,t)=>{e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t)})),t(this,"_checkFormValidity",(()=>[...this._formElement.querySelectorAll(this._settings.inputSelector)].every((e=>e.validity.valid)))),t(this,"_toggleButtonState",(()=>{this._checkFormValidity()?(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled")):(this._buttonElement.setAttribute("disabled","true"),this._buttonElement.classList.add(this._settings.inactiveButtonClass))})),this._formElement=e,this._settings=r,this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSeletor)}enableValidation(){Array.from(document.querySelectorAll(this._settings.formSelector)).forEach((e=>{e.addEventListener("submit",(function(e){e.preventDefault()}));const t=[...e.querySelectorAll(this._settings.inputSelector)];this._toggleButtonState(),e.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)})),t.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._settings),this._toggleButtonState()}))}))}))}};function s(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var n=class{constructor(e){s(this,"_handleCloseButton",(()=>{this.closeModal()})),s(this,"_handleEscapePopup",(e=>{"Escape"===e.key&&this.closeModal()})),s(this,"_handleModalOverlay",(e=>{e.target.classList.contains(".modal")&&this.closeModal()})),this._popupElement=document.querySelector(`${e}`)}openModal(){this._popupElement.classList.add("modal__open"),document.addEventListener("keyup",this._handleEscapePopup)}closeModal(){this._popupElement.classList.remove("modal__open"),document.removeEventListener("keyup",this._handleEscapePopup)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal__open")&&this.closeModal(),e.target.classList.contains("modal__close")&&this.closeModal()}))}},i=class extends n{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super(t),this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._modalForm.querySelectorAll(".modal__input"),this._handleFormSubmit=r,this._buttonElement=this._modalForm.querySelector(".modal__save-button")}_getInputValues(){return this._formValues={},this._inputs.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}renderLoading(e){this._buttonElement.textContent=e?"Saving...":"Save"}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}closeModal(){this._modalForm.reset(),super.closeModal()}};const o="db0cb0b5-b0ef-4843-a8af-9c3db60e50cb",a={authorization:o,"Content-Type":"application/json"},l={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSeletor:".modal__save-button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},d=document.querySelector(".modal__form-create"),c=document.querySelector(".profile__add-button"),u=document.querySelector(".profile__avatar-edit"),h=document.querySelector(".profile__edit-button"),m=document.querySelector(".modal__input-profile-name"),_=document.querySelector(".modal__input-profile-description"),p=(document.querySelector(".card__like-button"),new class{constructor(t){let{baseUrl:r,authToken:s,headers:n}=t;e(this,"getInitialCards",(async()=>{const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._handleResponse(e)})),e(this,"addCard",(async e=>{let{name:t,link:r}=e;const s=await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})});return this._handleResponse(s)})),e(this,"deleteCardById",(async e=>{const t=await fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers,body:JSON.stringify({id:e})});return this._handleResponse(t)})),e(this,"getUserInfo",(async()=>{const e=await fetch(`${this._baseUrl}/users/me`,{headers:this._headers});return this._handleResponse(e)})),e(this,"editUserInfo",(async e=>{let{name:t,about:r}=e;const s=await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})});return this._handleResponse(s)})),e(this,"setUserAvatar",(async e=>{let{avatar:t}=e;const r=await fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})});return this._handleResponse(r)})),e(this,"changeCardLikeStatus",(async(e,t)=>{const r=await fetch(`${this._baseUrl}/cards/likes/${e}`,{method:t?"PUT":"DELETE",headers:this._headers,body:JSON.stringify({like:t})});return this._handleResponse(r)})),this._baseUrl=r,this._authToken=s,this._headers=n}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status} ${e.statusText}`)}_handleResponseError(e){console.log(`Error processing request ${e}`)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",authToken:o,headers:a})),v=document.querySelector("#modal__edit"),b=document.querySelector("#modal__create"),g=document.querySelector("#avatar-modal"),y=new class extends n{open(e){let{name:t,link:r}=e;this._imageElement=document.querySelector("#image-modal"),super.setEventListeners();const s=this._imageElement.querySelector(".modal__preview-image"),n=this._imageElement.querySelector(".modal__caption");s.src=r,s.alt=t,n.textContent=t,super.openModal()}}("#image-modal"),f=new class extends n{constructor(e){super(e),this._modalElement=document.querySelector(e),this._submitButton=this._modalElement.querySelector(".modal__save-button")}renderLoading(e){this._submitButton.textContent=e?"Deleting...":"Yes"}setSubmitAction(e){this._submitButton.addEventListener("click",e)}setEventListeners(){super.setEventListeners(),this._submitButton.classList.remove("modal__button-disabled")}}("#delete-modal"),E=new class{constructor(e,t,r){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,role:this._descriptionElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=r}setAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__image"),S=new r(v,l),L=new r(b,l),k=new r(g,l);function C(e,t){const r=new class{constructor(e,t){let{data:r,userId:s,handleImageClick:n,handleDeleteClick:i,handleUserLikes:o}=e;var a,l,d;a=this,d=()=>this._id,(l=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(l="getCardId"))in a?Object.defineProperty(a,l,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[l]=d,this._data=r,this._id=r._id,this._userId=s,this._ownerId=r.owner._id,this._name=r.name,this._link=r.link,this._likes=r.likes,this._cardSelector=t,this._handleImageClick=n,this._handleDeleteClick=i,this._handleUserLikes=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}handleDeleteCard(){this._element.remove(),this._element=null}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.find((e=>e._id==this._userId))}_renderLikes(){this._likes.length>0&&(this.imageCountElement.textContent=this._likes.length),this.isLiked()?this.imageLikeElement.classList.add("card__like-active"):this.imageLikeElement.classList.remove("card__like-active")}_setEventListeners(){this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteClick())),this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleUserLikes())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,src:this._link})))}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this.imageElement=this._element.querySelector(".card__image"),this.imageElementText=this._element.querySelector(".card__label-text"),this.imageDeleteElement=this._element.querySelector(".card__delete-button"),this.imageLikeElement=this._element.querySelector(".card__like-button"),this.imageCountElement=this._element.querySelector(".card__like-count"),this.imageElement.src=this._link,this.imageElement.alt=this._name,this.imageElementText.textContent=this._name,this._renderLikes(),this._userId!==this._ownerId&&this.imageDeleteElement.remove(),this._element}}({data:e,userId:t,handleImageClick:()=>{y.open(e)},handleDeleteClick:()=>{const e=r.getCardId();f.openModal(),f.setSubmitAction((()=>{f.renderLoading(!0),p.deleteCardById(e).then((()=>{r.handleDeleteCard(),f.closeModal()})).catch((e=>console.error(e))).finally((()=>f.renderLoading(!1)))}))},handleUserLikes:()=>{p.changeCardLikeStatus(r.getCardId(),r.isLiked()).then((e=>r.setLikes(e.likes))).catch((e=>console.error(e)))}},"#card-template");return r.generateCard()}c.addEventListener("click",(()=>{I.openModal()}));const I=new i({popupSelector:"#modal__create",handleFormSubmit:e=>{I.renderLoading(!0),p.addCard(e).then((e=>{C(e),d.reset(),I.closeModal()})).catch((e=>{console.error(e)})).finally((()=>I.renderLoading(!1)))}});u.addEventListener("click",(()=>{q.openModal()}));const q=new i({popupSelector:"#avatar-modal",handleFormSubmit:e=>{q.renderLoading(!0),p.setUserAvatar(e).then((e=>{E.setAvatar(e),q.closeModal()})).catch((e=>console.log(e))).finally((()=>q.renderLoading(!1)))}});h.addEventListener("click",(()=>{const{name:e,role:t}=E.getUserInfo();(e=>{let{name:t,role:r}=e;m.value=t,_.value=r})({name:e,role:t}),w.openModal()}));const w=new i({popupSelector:"#modal__edit",handleFormSubmit:e=>{w.renderLoading(!0),p.editUserInfo(e).then((e=>{E.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),w.closeModal()})).catch((e=>{console.error(e)})).finally((()=>w.renderLoading(!1)))}});p.getAppInfo().then((e=>{let[t,r]=e;E.setUserInfo({name:t.name,about:t.about});const s=t.avatar;E.setAvatar(s);const n=t._id,i=new class{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:r,renderer:e=>{const t=C(e,n);i.addItem(t)}},".cards__list");i.renderItems()})).catch((e=>{console.error(e)})),I.setEventListeners(),q.setEventListeners(),f.setEventListeners(),w.setEventListeners(),y.setEventListeners(),k.enableValidation(),L.enableValidation(),S.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,