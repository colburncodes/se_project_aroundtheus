!function(){"use strict";function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var r=class{constructor(e,r){t(this,"_showInputError",(e=>{const t=document.querySelector(`.${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass),e.classList.add(this._settings.inputErrorClass)})),t(this,"_hideInputError",(e=>{const t=document.querySelector(`.${e.id}-error`);t.textContent="",e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass)})),t(this,"_checkInputValidity",((e,t)=>{e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t)})),t(this,"_checkFormValidity",(()=>[...this._formElement.querySelectorAll(this._settings.inputSelector)].every((e=>e.validity.valid)))),t(this,"_toggleButtonState",(()=>{const e=this._checkFormValidity(),t=this._formElement.querySelector(this._settings.submitButtonSeletor);e?(t.classList.remove(this._settings.inactiveButtonClass),t.removeAttribute("disabled")):(t.setAttribute("disabled","true"),t.classList.add(this._settings.inactiveButtonClass))})),this._formElement=e,this._settings=r}enableValidation(){Array.from(document.querySelectorAll(this._settings.formSelector)).forEach((e=>{e.addEventListener("submit",(function(e){e.preventDefault()}));const t=[...e.querySelectorAll(this._settings.inputSelector)];this._toggleButtonState(),e.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)})),t.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._settings),this._toggleButtonState()}))}))}))}};function n(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var s=class{constructor(e){n(this,"_handleCloseButton",(()=>{this.closeModal()})),n(this,"_handleEscapePopup",(e=>{"Escape"===e.key&&this.closeModal()})),n(this,"_handleModalOverlay",(e=>{e.target.classList.contains(".modal")&&this.closeModal()})),this._popupElement=document.querySelector(`${e}`)}openModal(){this._popupElement.classList.add("modal__open"),document.addEventListener("keyup",this._handleEscapePopup)}closeModal(){this._popupElement.classList.remove("modal__open"),document.removeEventListener("keyup",this._handleEscapePopup)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal__open")&&this.closeModal(),e.target.classList.contains("modal__close")&&this.closeModal()}))}},i=class extends s{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super(t),this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._modalForm.querySelectorAll(".modal__input"),this._handleFormSubmit=r}_getInputValues(){return this._formValues={},this._inputs.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}closeModal(){this._modalForm.reset(),super.closeModal()}};const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSeletor:".modal__save-button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},a=document.querySelector(".modal__form-create"),l=document.querySelector(".profile__add-button"),c=document.querySelector(".profile__edit-button"),d=document.querySelector(".modal__input-profile-name"),h=document.querySelector(".modal__input-profile-description"),u=new class{constructor(t){let{baseUrl:r,authToken:n}=t;e(this,"getInitialCards",(async()=>await fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then(this._handleResponse).catch((e=>this._handleResponseError(e))))),e(this,"addCard",(async e=>{let{name:t,link:r}=e;return await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then(this._handleResponse).catch((e=>this._handleResponseError(e)))})),e(this,"deleteCardById",(async e=>await fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({id:e})}).then(this._handleResponse).catch((e=>this._handleResponseError(e))))),e(this,"getUserInfo",(async()=>await fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then(this._handleResponse).catch((e=>this._handleResponseError(e))))),e(this,"editUserInfo",(async e=>{let{name:t,about:r}=e;return await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:r})}).then(this._handleResponse).catch((e=>this._handleResponseError(e)))})),e(this,"setUserAvatar",(async e=>{let{avatar:t}=e;return await fetch(`${this._baseUrl}/users/me/${t}`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this._handleResponse).catch((e=>this._handleResponseError(e)))})),e(this,"changeCardLikeStatus",(async(e,t)=>await fetch(`${this._baseUrl}/cards/likes/${e}`,{method:t?"PUT":"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({like:t})}).then(this._handleResponse).catch((e=>this._handleResponseError(e))))),this._baseUrl=r,this._authToken=n}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status} ${e.statusText}`)}_handleResponseError(e){console.log(`Error processing request ${e}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",authToken:"db0cb0b5-b0ef-4843-a8af-9c3db60e50cb"}),_=document.querySelector("#modal__edit"),m=document.querySelector("#modal__create"),p=new class extends s{open(e){let{name:t,link:r}=e;this._imageElement=document.querySelector("#image-modal"),super.setEventListeners();const n=this._imageElement.querySelector(".modal__preview-image"),s=this._imageElement.querySelector(".modal__caption");n.src=r,n.alt=t,s.textContent=t,super.openModal()}}("#image-modal"),y=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,role:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,about:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=r}}(".profile__title",".profile__description"),f=new r(_,o),v=new r(m,o);l.addEventListener("click",(()=>{b.openModal()}));const b=new i({popupSelector:"#modal__create",handleFormSubmit:e=>{u.addCard(e).then((e=>e)).catch((e=>{console.error(e)})),a.reset(),b.closeModal()}});c.addEventListener("click",(()=>{const{name:e,role:t}=y.getUserInfo();d.value=e,h.value=t,g.openModal()}));const g=new i({popupSelector:"#modal__edit",handleFormSubmit:e=>{u.editUserInfo(e).then((e=>{y.setUserInfo({name:e.name,about:e.about})})).catch((e=>{console.error(e)})),g.closeModal()}});let E;u.getAppInfo().then((e=>{let[t,r]=e;E=r._id,y.setUserInfo({name:r.name,about:r.about});const n=new class{constructor(e,t){let{items:r,renderer:n}=e;this._items=r,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:t,renderer:e=>{const t=new class{constructor(e,t){let{data:r,handleImageClick:n,handleDeleteClick:s,handleUserLikes:i}=e;var o,a,l;o=this,l=()=>this._element.querySelector(".card__like-button").classList.toggle("card__like-active"),(a=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(a="handleLikeIcon"))in o?Object.defineProperty(o,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):o[a]=l,this._id=r._id,this._ownerId=r.owner._id,this._name=r.name,this._link=r.link,this._likes=r.likes,this._cardSelector=t,this._handleImageClick=n,this._handleDeleteClick=s,this._handleUserLikes=i}getById(){return this._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}handleDeleteCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteClick())),this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleUserLikes())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,src:this._link})))}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__label-text");return e.src=this._link,e.alt=this._name,t.textContent=this._name,this._element}}({data:e,handleImageClick:()=>{p.open(e)},handleDeleteClick:()=>{const r=t.getById(),n=e.owner._id;E===n&&u.deleteCardById(r).then((()=>{t.handleDeleteCard(),console.log("Card was deleted successfully")})).catch((e=>console.error(e)))},handleUserLikes:()=>{const e=t.getById();u.addUserLikes(e).then((()=>{t.handleLikeIcon()}))}},"#card-template");n.addItem(t.generateCard())}},".cards__list");n.renderItems()})).catch((e=>{console.error(e)})),g.setEventListeners(),b.setEventListeners(),p.setEventListeners(),f.enableValidation(),v.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,